#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <cmath>

using namespace std;

const int N = 2000 + 5;
//int sg[N];
//bool vis[N];
int sg[] = {
	0,
1,
1,
1,
2,
2,
0,
3,
3,
1,
1,
1,
0,
4,
3,
3,
3,
2,
2,
2,
4,
4,
0,
5,
5,
2,
2,
2,
3,
3,
0,
5,
0,
1,
1,
1,
3,
3,
3,
5,
6,
4,
4,
1,
0,
5,
5,
6,
6,
2,
7,
7,
7,
8,
0,
1,
9,
2,
7,
2,
3,
3,
3,
9,
0,
5,
4,
4,
8,
6,
6,
2,
7,
1,
1,
1,
0,
5,
5,
9,
3,
1,
8,
2,
8,
5,
0,
1,
1,
12,
2,
2,
7,
3,
3,
9,
4,
4,
0,
11,
3,
3,
3,
9,
2,
2,
8,
1,
3,
5,
0,
9,
12,
2,
6,
13,
13,
5,
0,
1,
1,
4,
11,
7,
7,
10,
3,
4,
1,
4,
0,
5,
0,
3,
3,
6,
7,
2,
14,
13,
10,
4,
12,
9,
2,
2,
3,
3,
6,
9,
9,
1,
16,
4,
8,
3,
3,
2,
15,
1,
1,
4,
0,
5,
5,
16,
6,
6,
6,
8,
0,
16,
5,
4,
4,
17,
2,
2,
7,
14,
6,
10,
12,
1,
0,
16,
13,
3,
6,
2,
7,
7,
8,
1,
0,
5,
17,
2,
12,
15,
3,
11,
0,
19,
18,
12,
4,
16,
17,
2,
2,
21,
6,
9,
4,
19,
5,
5,
17,
10,
3,
6,
19,
2,
7,
8,
4,
1,
9,
12,
7,
2,
13,
6,
3,
19,
5,
9,
4,
8,
8,
17,
17,
2,
15,
18,
1,
1,
8,
5,
21,
16,
21,
3,
19,
19,
13,
5,
18,
1,
4,
17,
7,
2,
7,
6,
3,
19,
12,
5,
5,
16,
16,
6,
17,
19,
7,
7,
18,
1,
4,
17,
0,
9,
16,
3,
3,
14,
13,
22,
0,
1,
15,
24,
17,
2,
6,
18,
3,
4,
19,
19,
0,
8,
21,
16,
3,
15,
7,
26,
18,
13,
1,
1,
17,
9,
2,
21,
2,
6,
22,
19,
9,
5,
16,
4,
16,
20,
3,
7,
18,
23,
22,
8,
20,
5,
16,
21,
15,
6,
10,
19,
18,
18,
18,
4,
4,
17,
17,
7,
2,
3,
23,
19,
9,
5,
0,
16,
16,
3,
17,
30,
2,
18,
18,
8,
4,
17,
17,
9,
27,
6,
10,
19,
19,
14,
9,
9,
4,
20,
17,
14,
11,
7,
18,
6,
19,
19,
5,
13,
16,
16,
10,
6,
19,
19,
23,
18,
4,
4,
17,
12,
12,
14,
10,
6,
3,
19,
5,
9,
5,
21,
16,
20,
6,
7,
7,
18,
30,
13,
13,
17,
12,
21,
15,
10,
3,
19,
22,
18,
8,
4,
32,
17,
17,
11,
14,
6,
26,
24,
12,
5,
9,
16,
16,
6,
7,
7,
7,
18,
18,
8,
4,
17,
20,
7,
16,
10,
10,
22,
19,
22,
9,
23,
4,
13,
17,
20,
7,
11,
23,
23,
4,
5,
9,
5,
16,
16,
10,
17,
10,
22,
18,
23,
8,
4,
17,
17,
20,
16,
32,
13,
19,
19,
33,
5,
5,
24,
8,
17,
20,
33,
18,
18,
23,
13,
22,
33,
33,
16,
15,
10,
10,
19,
19,
33,
18,
8,
20,
17,
17,
11,
16,
18,
26,
22,
19,
12,
9,
16,
16,
34,
20,
17,
35,
23,
18,
8,
8,
8,
17,
33,
16,
32,
10,
11,
22,
11,
12,
23,
9,
8,
17,
17,
11,
33,
18,
18,
19,
13,
12,
21,
16,
16,
10,
20,
14,
11,
22,
23,
34,
8,
17,
17,
29,
16,
7,
34,
19,
19,
9,
23,
5,
8,
32,
17,
33,
11,
23,
18,
18,
8,
12,
12,
16,
16,
16,
10,
32,
22,
22,
11,
18,
13,
8,
20,
17,
11,
21,
11,
15,
19,
22,
12,
12,
16,
16,
32,
17,
17,
35,
23,
18,
8,
13,
13,
9,
17,
16,
10,
10,
19,
14,
19,
25,
12,
12,
13,
20,
14,
11,
11,
23,
10,
22,
22,
35,
9,
16,
16,
17,
10,
20,
11,
18,
18,
13,
13,
24,
17,
12,
16,
15,
34,
19,
19,
33,
12,
16,
32,
8,
17,
20,
33,
18,
10,
18,
32,
24,
8,
16,
16,
16,
15,
32,
19,
19,
22,
13,
13,
32,
20,
20,
35,
33,
34,
15,
22,
19,
12,
12,
13,
13,
21,
20,
14,
14,
18,
18,
23,
22,
13,
9,
17,
16,
15,
15,
10,
11,
19,
18,
12,
12,
8,
20,
17,
11,
21,
15,
15,
31,
12,
38,
13,
25,
8,
20,
10,
15,
11,
23,
18,
13,
13,
12,
12,
12,
21,
32,
10,
19,
19,
9,
9,
38,
13,
20,
17,
14,
11,
14,
27,
18,
5,
12,
13,
1,
21,
16,
17,
17,
19,
11,
11,
18,
13,
8,
12,
24,
20,
16,
11,
15,
19,
19,
12,
9,
13,
13,
13,
33,
17,
14,
3,
15,
32,
19,
8,
9,
4,
16,
15,
32,
19,
19,
11,
33,
18,
32,
17,
17,
14,
14,
33,
18,
10,
19,
12,
35,
33,
16,
16,
15,
26,
10,
11,
23,
18,
13,
13,
20,
20,
20,
16,
37,
34,
22,
19,
23,
18,
25,
8,
17,
17,
11,
11,
18,
10,
10,
19,
40,
36,
9,
16,
16,
15,
32,
11,
6,
18,
18,
13,
8,
17,
9,
35,
16,
34,
10,
19,
19,
31,
35,
9,
21,
13,
20,
14,
10,
18,
18,
23,
34,
41,
12,
4,
16,
32,
5,
26,
11,
14,
18,
13,
12,
8,
20,
17,
16,
16,
23,
15,
19,
19,
35,
40,
16,
16,
20,
17,
46,
14,
11,
18,
34,
8,
12,
17,
20,
16,
32,
39,
19,
22,
31,
23,
9,
8,
8,
21,
17,
33,
15,
10,
10,
22,
19,
12,
21,
16,
20,
15,
32,
35,
11,
18,
18,
34,
13,
9,
29,
16,
21,
11,
14,
19,
19,
35,
35,
16,
8,
17,
20,
33,
14,
11,
10,
30,
13,
44,
40,
1,
16,
28,
32,
44,
19,
11,
23,
23,
9,
32,
17,
17,
21,
16,
49,
2,
22,
40,
35,
33,
16,
8,
34,
17,
43,
10,
18,
18,
39,
22,
9,
9,
16,
21,
37,
14,
26,
19,
33,
18,
27,
32,
8,
24,
24,
33,
18,
32,
10,
19,
38,
12,
16,
16,
16,
17,
43,
10,
5,
18,
18,
39,
9,
17,
17,
35,
16,
47,
37,
22,
19,
35,
23,
40,
0,
8,
17,
33,
38,
18,
15,
39,
34,
22,
9,
16,
25,
21,
15,
22,
14,
11,
18,
45,
9,
40,
17,
20,
36,
33,
15,
10,
22,
19,
35,
35,
16,
16,
17,
20,
46,
45,
30,
18,
23,
34,
9,
12,
21,
16,
43,
32,
19,
19,
42,
38,
18,
32,
8,
24,
24,
33,
18,
18,
15,
22,
26,
50,
33,
16,
16,
15,
17,
46,
6,
18,
18,
39,
57,
48,
17,
35,
49,
49,
14,
22,
19,
38,
23,
13,
16,
16,
17,
36,
14,
11,
10,
32,
19,
41,
52,
21,
25,
24,
32,
24,
14,
14,
18,
30,
51,
9,
8,
17,
36,
16,
11,
19,
19,
19,
35,
49,
16,
13,
29,
53,
53,
36,
10,
18,
34,
34,
9,
9,
9,
20,
52,
37,
14,
19,
22,
23,
30,
40,
20,
17,
36,
21,
36,
32,
18,
19,
31,
55,
33,
21,
16,
37,
17,
35,
23,
30,
18,
34,
48,
12,
24,
35,
49,
49,
44,
22,
19,
22,
18,
35,
34,
8,
20,
29,
47,
18,
23,
30,
55,
22,
38,
8,
21,
28,
20,
11,
26,
14,
18,
51,
56,
40,
12,
17,
16,
21,
52,
14,
26,
19,
35,
54,
44,
8,
20,
32,
33,
60,
10,
10,
23,
22,
48,
35,
16,
16,
57,
37,
14,
31,
30,
18,
18,
43,
20,
17,
17,
42,
33,
10,
34,
19,
19,
50,
56,
16,
12,
37,
20,
53,
23,
23,
26,
44,
56,
48,
12,
25,
16,
49,
34,
19,
14,
38,
45,
49,
39,
16,
12,
48,
10,
15,
27,
15,
39,
55,
55,
4,
13,
16,
64,
24,
58,
36,
47,
30,
63,
12,
9,
12,
33,
49,
51,
14,
10,
19,
23,
56,
49,
12,
16,
17,
58,
38,
33,
18,
18,
22,
34,
35,
21,
8,
16,
29,
50,
31,
15,
38,
51,
64,
12,
12,
24,
61,
15,
37,
23,
19,
55,
35,
61,
8,
16,
17,
53,
53,
10,
18,
10,
41,
56,
45,
40,
21,
28,
16,
65,
55,
19,
22,
54,
23,
44,
12,
17,
24,
40,
32,
54,
27,
14,
50,
62,
13,
8,
28,
43,
17,
55,
10,
23,
30,
56,
37,
24,
17,
13,
16,
52,
37,
14,
14,
23,
18,
49,
9,
16,
20,
47,
60,
23,
10,
11,
64,
19,
38,
38,
8,
16,
64,
20,
48,
27,
19,
56,
51,
20,
24,
24,
28,
16,
37,
14,
14,
26,
35,
65,
25,
9,
21,
20,
64,
65,
10,
23,
69,
66,
53,
40,
16,
16,
49,
66,
26,
19,
19,
23,
18,
39,
9,
9,
70,
65,
45,
18,
14,
22,
19,
65,
25,
16,
16,
12,
17,
47,
36,
15,
18,
34,
64,
24,
13,
56,
49,
61,
37,
19,
10,
23,
68,
56,
44,
12,
17,
53,
67,
30,
27,
18,
55,
39,
45,
21,
16,
16,
44,
66,
53,
15,
15,
23,
54,
64,
20,
47,
17,
21,
52,
14,
14,
22,
74,
65,
49,
12,
9,
20,
53,
42,
18,
19,
74,
31,
38,
8,
13,
13,
17,
66,
66,
19,
15,
54,
51,
71,
17,
17,
20,
16,
67,
46,
14,
14,
50,
47,
38,
16,
9,
12,
17,
53,
65,
10,
18,
71,
31,
57,
20,
17,
28,
61,
69,
14,
19,
10,
18,
44,
52,
17,
9,
72,
72,
63,
18,
23,
14,
22,
38,
21,
8,
12,
41,
74,
55,
19,
18,
67,
64,
14,
9,
65,
8,
68,
51,
11,
11,
14,
42,
65,
56,
12,
16,
29,
40,
65,
10,
63,
11,
71,
62,
60,
16,
21,
25,
41,
62,
59,
15,
10,
18,
71,
64,
9,
8,
15,
68,
54,
14,
19,
19,
42,
67,
54,
25,
12,
57,
55,
68,
18,
18,
46,
73,
60,
13,
20,
13,
52,
69,
19,
59,
10,
10,
58,
71,
17,
12,
24,
40,
58,
18,
18,
11,
19,
45,
16,
16,
9,
17,
20,
62,
10,
23,
30,
11,
14,
17,
8,
65,
56,
16,
46,
11,
18,
10,
15,
49,
12,
9,
29,
57,
68,
49,
18,
11,
14,
48,
57,
21,
16,
25,
75,
74,
59,
26,
10,
78,
11,
12,
16,
17,
8,
68,
18,
14,
11,
19,
15,
70,
35,
64,
9,
9,
53,
65,
58,
18,
31,
46,
53,
20,
8,
16,
81,
64,
45,
19,
15,
10,
54,
71,
12,
48,
29,
13,
65,
36,
22,
14,
19,
47,
16,
16,
12,
12,
57,
62,
65,
18,
18,
46,
66,
50,
17,
8,
8,
56,
64,
19,
10,
10,
30,
76,
16,
9,
17,
45,
65,
23,
18,
11,
11,
48,
70,
21,
16,
25,
72,
62,
59,
68,
10,
18,
71,
20,
20,
13,
13,
25,
33,
64,
22,
27,
10,
67,
66,
9,
9,
9,
60,
18,
18,
18,
22,
38,
48,
17,
8,
25,
52,
69,
62,
65,
10,
10,
63,
76,
69,
9,
8,
13,
78,
81,
18,
11,
48,
62,
65,
16,
12,
9,
29,
74,
65,
10,
14,
11,
66,
53,
17,
8,
8,
81,
9,
22,
19,
10,
10,
83,
21,
89,
17,
9,
68,
81,
58,
18,
59,
47,
72,
67,
21,
9,
66,
69,
59,
19,
30,
26,
71,
20,
17,
8,
21,
44,
78,
22,
12,
10,
79,
51,
51,
38,
17,
20,
60,
68,
18,
11,
18,
11,
59,
17,
28,
8,
81,
9,
55,
19,
15,
58,
58,
36,
16,
17,
13,
67,
63,
49,
18,
71,
47,
15,
61,
21,
9,
12,
57,
82,
68,
63,
11,
64,
66,
57,
77,
8,
49,
56,
12,
22,
19,
18,
27,
81,
83,
75,
20,
45,
65,
44,
65,
11,
14,
59,
15,
13,
16,
56,
25,
76,
62,
22,
10,
15,
66,
66,
17,
8,
8,
41,
9,
69,
	12,
};
// inline void init() 
// {
// 	for (int i = 1; i <= 2000; ++i) {
// 		int G = 0;
// 		memset(vis, 0, sizeof(vis));
// 		for (int k = 1; k <= i; ++k) {
// 			G = calc(k - 3) ^ calc(i - k - 2);
// 			vis[G] = 1;
// 		}
// 		for (int j = 0; j <= 2000; ++j) {
// 			if (!vis[j]) {
// 				sg[i] = j;
// 				break;
// 			}
// 		}
// 		printf("%d,\n", sg[i]);
// 	}
// 	return;
// }

int main()
{
	int n;
	scanf("%d", &n);
	puts(sg[n] == 0 ? "2" : "1");
	return 0;
}
